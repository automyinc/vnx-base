
// AUTO GENERATED by vnxcppcodegen

#ifndef INCLUDE_vnx_Terminal_CLIENT_HXX_
#define INCLUDE_vnx_Terminal_CLIENT_HXX_

#include <vnx/Client.h>
#include <vnx/Module.h>
#include <vnx/terminal_event_e.hxx>


namespace vnx {

class TerminalClient : public vnx::Client {
public:
	TerminalClient(const std::string& service_name);
	
	TerminalClient(vnx::Hash64 service_addr);
	
	::vnx::Object vnx_get_config_object();
	
	::vnx::Variant vnx_get_config(const std::string& name = "");
	
	void vnx_set_config_object(const ::vnx::Object& config = ::vnx::Object());
	
	void vnx_set_config_object_async(const ::vnx::Object& config = ::vnx::Object());
	
	void vnx_set_config(const std::string& name = "", const ::vnx::Variant& value = ::vnx::Variant());
	
	void vnx_set_config_async(const std::string& name = "", const ::vnx::Variant& value = ::vnx::Variant());
	
	::vnx::TypeCode vnx_get_type_code();
	
	std::shared_ptr<const ::vnx::ModuleInfo> vnx_get_module_info();
	
	void vnx_restart();
	
	void vnx_restart_async();
	
	void vnx_stop();
	
	void vnx_stop_async();
	
	vnx::bool_t vnx_self_test();
	
	void command(const std::vector<std::string>& commandline = {});
	
	void command_async(const std::vector<std::string>& commandline = {});
	
	void read_char(const int8_t& c = 0);
	
	void read_char_async(const int8_t& c = 0);
	
	void read_event(const ::vnx::terminal_event_e& event);
	
	void read_event_async(const ::vnx::terminal_event_e& event);
	
	void spy(const std::string& expr = "");
	
	void spy_async(const std::string& expr = "");
	
	void dump(const std::string& expr = "");
	
	void dump_async(const std::string& expr = "");
	
	void topic_info(const std::string& expr = "");
	
	void topic_info_async(const std::string& expr = "");
	
	void module_info(const std::string& expr = "");
	
	void module_info_async(const std::string& expr = "");
	
	void show_config(const std::string& expr = "");
	
	void show_config_async(const std::string& expr = "");
	
	void htop(const vnx::bool_t& order_by_avg = 0);
	
	void htop_async(const vnx::bool_t& order_by_avg = 0);
	
};


} // namespace vnx

#endif // INCLUDE_vnx_Terminal_CLIENT_HXX_
