
// AUTO GENERATED by vnxcppcodegen

#ifndef INCLUDE_vnx_Player_CLIENT_HXX_
#define INCLUDE_vnx_Player_CLIENT_HXX_

#include <vnx/Client.h>
#include <vnx/Module.h>
#include <vnx/RecordHeader.hxx>
#include <vnx/TopicPtr.hpp>


namespace vnx {

class PlayerClient : public vnx::Client {
public:
	PlayerClient(const std::string& service_name);
	
	PlayerClient(vnx::Hash64 service_addr);
	
	::vnx::TypeCode vnx_get_type_code();
	
	::vnx::RecordHeader get_info();
	
	void play();
	
	void play_async();
	
	void pause();
	
	void pause_async();
	
	void toggle();
	
	void toggle_async();
	
	void stop();
	
	void stop_async();
	
	void set_speed(const vnx::float64_t& speed);
	
	void set_speed_async(const vnx::float64_t& speed);
	
	void seek_by_count(const int64_t& delta_count);
	
	void seek_by_count_async(const int64_t& delta_count);
	
	void seek_by_time(const int64_t& delta_us);
	
	void seek_by_time_async(const int64_t& delta_us);
	
	void seek_to_position(const vnx::float64_t& position);
	
	void seek_to_position_async(const vnx::float64_t& position);
	
	void seek_to_time(const int64_t& time_us);
	
	void seek_to_time_async(const int64_t& time_us);
	
};


} // namespace vnx

#endif // INCLUDE_vnx_Player_CLIENT_HXX_
