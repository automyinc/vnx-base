package vnx;

module Player {
	
	TopicPtr output_status = "vnx.player_status";
	
	vector<string> files;						// list of record files to play back
	
	int interval_ms = 100;						// info publish interval
	int max_time_gap_ms = 5000;					// maximum gap between two files (will skip any bigger gap)
	double play_speed = 1;						// initial play speed
	
	bool is_default_enable = true;				// if to publish all topics by default
	bool is_blocking = false;					// if to publish in blocking mode
	bool is_repeat = false;						// if to play in a loop
	bool is_autostart = false;					// if to start playing automatically
	bool is_autoclose = false;					// if to exit player when reaching end of file
	bool is_autoshutdown = false;				// if to shutdown whole process when reaching end of file
	
	map<TopicPtr, TopicPtr> topic_map;			// map for topic re-mapping (old => new)
	
	
	RecordHeader get_info() const;
	
	void play();
	
	void pause();
	
	void toggle();
	
	void stop();
	
	void set_speed(double speed);
	
	void seek_by_count(long delta_count);
	void seek_by_time(long delta_us);
	
	void seek_to_position(double position);
	void seek_to_time(long time_us);
	
}
