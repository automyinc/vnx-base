package vnx;

module Proxy {
	
	string address;						// URL to connect to
	
	vector<string> import_list;			// for topics
	vector<string> export_list;			// for topics
	vector<string> forward_list;		// for services
	
	map<Hash64, string> tunnel_map;		// (local -> remote)
	
	Hash64 receive_tunnel;				// optional pipe to send all samples to
	Hash64 request_tunnel;				// optional pipe to send all requests to
	
	bool auto_import = false;			// import all topics that are currently subscribed
	bool time_sync = false;				// if to sync time with remote process
	bool json_output = false;			// if to communicate via json
	
	int max_queue_ms = 100;
	int max_hop_count = 10;
	
	void enable_import(string topic_name);
	void disable_import(string topic_name);
	
	void enable_export(string topic_name);
	void disable_export(string topic_name);
	
	void enable_forward(string service_name, int max_queue_ms);
	void disable_forward(string service_name);
	
	void enable_tunnel(Hash64 tunnel_addr, string service_name, int max_queue_ms);
	void disable_tunnel(Hash64 tunnel_addr);
	
	void on_connect();					// internal use only
	void on_disconnect();				// internal use only
	
	void handle(TopicInfoList sample);
	
}
