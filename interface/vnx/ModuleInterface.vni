package vnx;

interface ModuleInterface {
	
	@Permission(READ_CONFIG)
	Object vnx_get_config_object() const;				// returns entire config
	
	@Permission(READ_CONFIG)
	Variant vnx_get_config(string name) const;			// return specific field
	
	@Permission(WRITE_CONFIG)
	void vnx_set_config_object(Object config);			// sets multiple config values
	
	@Permission(WRITE_CONFIG)
	void vnx_set_config(string name, Variant value);	// sets a new config value
	
	TypeCode vnx_get_type_code() const;
	
	ModuleInfo* vnx_get_module_info() const;
	
	@Permission(RESTART)
	void vnx_restart();		// restarts the module in-place
	
	@Permission(STOP)
	void vnx_stop();		// stops and deletes the module
	
	@Permission(SELF_TEST)
	bool vnx_self_test() const;				// performs user defined self test
	
}
